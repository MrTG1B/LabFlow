rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Grants the owner full access to their user document.
     * @path /users/{userId}
     * @allow (create) User with matching UID can create their profile.
     * @allow (get, list, update, delete) Owner can read, update, and delete their profile.
     * @deny (create) Non-owner cannot create a user profile.
     * @deny (update, delete) Non-owner cannot modify or delete another user's profile.
     * @principle Enforces user-ownership for profile data.
     */
    match /users/{userId} {
      function isOwner(userId) {
        return request.auth != null && request.auth.uid == userId;
      }
      function isSignedIn() {
        return request.auth != null;
      }

      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    /**
     * @description Allows authenticated users to read, create, update, and delete inventory items.
     * @path /inventory/{inventoryItemId}
     * @allow (get, list) Authenticated user can read any item.
     * @allow (create, update, delete) Authenticated user can create, update or delete any item.
     * @deny Requests from unauthenticated users.
     * @principle Allows any authenticated user to manage inventory items for prototyping.
     */
    match /inventory/{inventoryItemId} {
      function isSignedIn() {
        return request.auth != null;
      }

      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read, create, update, and delete vendor information.
     * @path /vendors/{vendorId}
     * @allow (get, list) Authenticated user can read any vendor.
     * @allow (create, update, delete) Authenticated user can create, update or delete any vendor.
     * @deny Requests from unauthenticated users.
     * @principle Allows any authenticated user to manage vendor information for prototyping.
     */
    match /vendors/{vendorId} {
      function isSignedIn() {
        return request.auth != null;
      }

      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }
  }
}